{"version":3,"sources":["components/cube-piece/RubixPiece.jsx","components/cube-side/RubixSide.jsx","components/cube/RubixCube.jsx","App.js","index.js"],"names":["RubixPiece","getStyle","piecePerRow","Math","floor","sqrt","props","rubixPiecesPerSide","background","color","width","sideWidth","margin","height","sideHeight","className","style","this","Component","RubixSide","rubixClass","getCubeStyle","Array","keys","map","i","key","number","rubixClasses","RubixCube","sideN","rubixColors","clientWidth","document","querySelector","App","state","side","size","halfSize","styles","back","transform","right","transformOrigin","left","top","bottom","front","window","addEventListener","setState","Fragment","React","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d87ce480.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./cube-piece.css\";\r\n\r\nexport class RubixPiece extends Component {\r\n  getStyle = () => {\r\n    let margin = 3;\r\n    let piecePerRow = Math.floor(Math.sqrt(this.props.rubixPiecesPerSide))\r\n    return {\r\n      background: this.props.color,\r\n      width: `calc(${this.props.sideWidth / piecePerRow}px - ${margin * 2}px)`,\r\n      height: `${this.props.sideHeight / piecePerRow}px - ${margin * 2}px`,\r\n      margin: `${3}px`\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"cube-piece\" style={this.getStyle()}></div>\r\n    );\r\n  }\r\n}\r\n\r\nRubixPiece.propTypes = {\r\n  rubixPiecesPerSide: PropTypes.number.isRequired,\r\n  number: PropTypes.number.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  sideWidth: PropTypes.number.isRequired,\r\n  sideHeight: PropTypes.number.isRequired\r\n};\r\n\r\nexport default RubixPiece;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport RubixPiece from \"../cube-piece/RubixPiece\";\r\nimport \"./cube-side.css\";\r\n\r\nexport class RubixSide extends Component {\r\n  render() {\r\n    let props = this.props;\r\n\r\n    return (\r\n      <div\r\n        className={props.rubixClass + \" cube-side\"}\r\n        style={this.props.getCubeStyle(props.rubixClass, props.width)}\r\n      >\r\n        {[...Array(props.rubixPiecesPerSide).keys()].map(i => (\r\n          <RubixPiece\r\n            key={i}\r\n            number={i + 1}\r\n            color={props.color}\r\n            sideWidth={props.width}\r\n            sideHeight={props.height}\r\n            getCubeStyle={props.getCubeStyle}\r\n            rubixClasses={props.rubixClasses}\r\n            rubixPiecesPerSide={props.rubixPiecesPerSide}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRubixSide.propTypes = {\r\n  rubixPiecesPerSide: PropTypes.number.isRequired,\r\n  rubixClasses: PropTypes.array.isRequired,\r\n  rubixClass: PropTypes.string.isRequired,\r\n  width: PropTypes.number.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  getCubeStyle: PropTypes.func.isRequired\r\n};\r\n\r\nexport default RubixSide;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport RubixSide from \"../cube-side/RubixSide\";\r\nimport \"./cube.css\";\r\n\r\nexport class RubixCube extends Component {\r\n  render() {\r\n    let props = this.props;\r\n    return (\r\n      <div className=\"wrap\">\r\n        <div\r\n          className=\"cube\"\r\n          style={{\r\n            width: `${props.width}px`,\r\n            height: `${props.width}px`\r\n          }}\r\n        >\r\n          {[...Array(6).keys()].map(sideN => (\r\n            <RubixSide\r\n              key={sideN}\r\n              color={props.rubixColors[sideN]}\r\n              rubixPiecesPerSide={props.rubixPiecesPerSide}\r\n              rubixClasses={props.rubixClasses}\r\n              rubixClass={props.rubixClasses[sideN]}\r\n              width={props.width}\r\n              height={props.width}\r\n              style={{\r\n                width: `${props.width}px`,\r\n                height: `${props.width}px`\r\n              }}\r\n              getCubeStyle={props.getCubeStyle}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRubixCube.propTypes = {\r\n  rubixPiecesPerSide: PropTypes.number.isRequired,\r\n  rubixColors: PropTypes.array.isRequired,\r\n  rubixClasses: PropTypes.array.isRequired,\r\n  width: PropTypes.number.isRequired,\r\n  getCubeStyle: PropTypes.func.isRequired\r\n};\r\n\r\nexport default RubixCube;\r\n","import React from 'react';\nimport './App.css';\nimport RubixCube from './components/cube/RubixCube.jsx';\n\nconst clientWidth = document.querySelector('body').clientWidth\n\nclass App extends React.Component {\n  state = {\n    rubixPiecesPerSide: 9,\n    rubixColors: ['red', 'green', 'white', 'blue', 'yellow', 'orange'],\n    rubixClasses: ['back', 'right', 'left', 'top', 'bottom', 'front'],\n    width: clientWidth\n  };\n\n  getCubeStyle = (side, size) => {\n    let halfSize = size / 2\n    let styles = {\n      back: {\n        transform: `translateZ(-${halfSize}px) rotateY(180deg)`,\n      },\n      right: {\n        transform: `rotateY(-270deg) translateX(${halfSize}px)`,\n        transformOrigin: `top right`,\n      },\n      left: {\n        transform: `rotateY(270deg) translateX(-${halfSize}px)`,\n        transformOrigin: `center left`,\n      },\n      top: {\n        transform: `rotateX(-90deg) translateY(-${halfSize}px)`,\n        transformOrigin: `top center`,\n      },\n      bottom: {\n        transform: `rotateX(90deg) translateY(${halfSize}px)`,\n        transformOrigin: `bottom center`,\n      },\n      front: {\n        transform: `translateZ(${halfSize}px)`,\n      }\n    }\n\n    return {\n      ...styles[side],\n      width: `${size}px`,\n      height: `${size}px`\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', () => {\n      this.setState({ width: document.querySelector('body').clientWidth })\n    })\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <RubixCube width={this.state.width > 600 ? 360 : this.state.width * .6} rubixPiecesPerSide={this.state.rubixPiecesPerSide} rubixColors={this.state.rubixColors} rubixClasses={this.state.rubixClasses} getCubeStyle={this.getCubeStyle} />\n      </React.Fragment>\n    )\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}